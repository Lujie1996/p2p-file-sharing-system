syntax = "proto3";

package chordService;

service Chord {
	rpc find_successor(FindSuccessorRequest) returns (FindSuccessorResponse) {}
	rpc get_predecessor(GetPredecessorRequest) returns (GetPredecessorResponse) {}
	rpc notify(NotifyRequest) returns (NotifyResponse) {}

	rpc get_finger_table (GetFingerTableRequest) returns (GetFingerTableResponse) {}
}

message FindSuccessorRequest {
	int32 id = 1;
	int32 pathlen = 2;
}

message FindSuccessorResponse {
	int32 successorId = 1;
	int32 pathlen = 2;
	string addr = 3;
}

message GetPredecessorRequest {

}

message GetPredecessorResponse {
	int32 id = 1;
	string addr = 2;
}

message NotifyRequest {
    int32 predecessorId = 1;
    string addr = 2;
}

message NotifyResponse {
    int32 result = 1;
}

message GetFingerTableRequest {

}

message GetFingerTableResponse {
	message Entry {
		int32 id = 1;
		int32 successor_id = 2;
		string addr = 3;
	}
	repeated Entry table = 1;
}

