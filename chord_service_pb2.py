# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chord_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='chord_service.proto',
  package='chordService',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x13\x63hord_service.proto\x12\x0c\x63hordService\"3\n\x14\x46indSuccessorRequest\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0f\n\x07pathlen\x18\x02 \x01(\x05\"K\n\x15\x46indSuccessorResponse\x12\x13\n\x0bsuccessorId\x18\x01 \x01(\x05\x12\x0f\n\x07pathlen\x18\x02 \x01(\x05\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x01(\t\"\x17\n\x15GetPredecessorRequest\"2\n\x16GetPredecessorResponse\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\t\"4\n\rNotifyRequest\x12\x15\n\rpredecessorId\x18\x01 \x01(\x05\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\t\"@\n\x04Pair\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x0b\n\x03len\x18\x02 \x01(\x05\x12\x0f\n\x07seq_num\x18\x03 \x01(\x05\x12\r\n\x05\x61\x64\x64rs\x18\x04 \x03(\t\"C\n\x0eNotifyResponse\x12\x0e\n\x06result\x18\x01 \x01(\x05\x12!\n\x05pairs\x18\x02 \x03(\x0b\x32\x12.chordService.Pair\"\x19\n\x17GetConfigurationRequest\"\xcd\x01\n\x18GetConfigurationResponse\x12\x15\n\rpredecessorId\x18\x01 \x01(\x05\x12\x13\n\x0bsuccessorId\x18\x02 \x01(\x05\x12;\n\x05table\x18\x03 \x03(\x0b\x32,.chordService.GetConfigurationResponse.Entry\x12\x0f\n\x07storage\x18\x04 \x01(\t\x1a\x37\n\x05\x45ntry\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x14\n\x0csuccessor_id\x18\x02 \x01(\x05\x12\x0c\n\x04\x61\x64\x64r\x18\x03 \x01(\t\"\x1a\n\nGetRequest\x12\x0c\n\x04keys\x18\x01 \x03(\t\"@\n\x0bGetResponse\x12\x0e\n\x06result\x18\x01 \x01(\x05\x12!\n\x05pairs\x18\x02 \x03(\x0b\x32\x12.chordService.Pair\"/\n\nPutRequest\x12!\n\x05pairs\x18\x01 \x03(\x0b\x32\x12.chordService.Pair\"\x1d\n\x0bPutResponse\x12\x0e\n\x06result\x18\x01 \x01(\x05\"1\n\x0c\x43heckRequest\x12!\n\x05pairs\x18\x01 \x03(\x0b\x32\x12.chordService.Pair\"\x1f\n\rCheckResponse\x12\x0e\n\x06result\x18\x01 \x01(\x05\x32\x89\x05\n\x05\x43hord\x12[\n\x0e\x66ind_successor\x12\".chordService.FindSuccessorRequest\x1a#.chordService.FindSuccessorResponse\"\x00\x12^\n\x0fget_predecessor\x12#.chordService.GetPredecessorRequest\x1a$.chordService.GetPredecessorResponse\"\x00\x12\x64\n\x11get_configuration\x12%.chordService.GetConfigurationRequest\x1a&.chordService.GetConfigurationResponse\"\x00\x12M\n\x0enotify_at_join\x12\x1b.chordService.NotifyRequest\x1a\x1c.chordService.NotifyResponse\"\x00\x12N\n\x0fnotify_at_leave\x12\x1b.chordService.NotifyRequest\x1a\x1c.chordService.NotifyResponse\"\x00\x12<\n\x03get\x12\x18.chordService.GetRequest\x1a\x19.chordService.GetResponse\"\x00\x12<\n\x03put\x12\x18.chordService.PutRequest\x1a\x19.chordService.PutResponse\"\x00\x12\x42\n\x05\x63heck\x12\x1a.chordService.CheckRequest\x1a\x1b.chordService.CheckResponse\"\x00\x62\x06proto3')
)




_FINDSUCCESSORREQUEST = _descriptor.Descriptor(
  name='FindSuccessorRequest',
  full_name='chordService.FindSuccessorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='chordService.FindSuccessorRequest.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pathlen', full_name='chordService.FindSuccessorRequest.pathlen', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=37,
  serialized_end=88,
)


_FINDSUCCESSORRESPONSE = _descriptor.Descriptor(
  name='FindSuccessorResponse',
  full_name='chordService.FindSuccessorResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='successorId', full_name='chordService.FindSuccessorResponse.successorId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pathlen', full_name='chordService.FindSuccessorResponse.pathlen', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addr', full_name='chordService.FindSuccessorResponse.addr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=165,
)


_GETPREDECESSORREQUEST = _descriptor.Descriptor(
  name='GetPredecessorRequest',
  full_name='chordService.GetPredecessorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=167,
  serialized_end=190,
)


_GETPREDECESSORRESPONSE = _descriptor.Descriptor(
  name='GetPredecessorResponse',
  full_name='chordService.GetPredecessorResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='chordService.GetPredecessorResponse.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addr', full_name='chordService.GetPredecessorResponse.addr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=192,
  serialized_end=242,
)


_NOTIFYREQUEST = _descriptor.Descriptor(
  name='NotifyRequest',
  full_name='chordService.NotifyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='predecessorId', full_name='chordService.NotifyRequest.predecessorId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addr', full_name='chordService.NotifyRequest.addr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=244,
  serialized_end=296,
)


_PAIR = _descriptor.Descriptor(
  name='Pair',
  full_name='chordService.Pair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='chordService.Pair.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='len', full_name='chordService.Pair.len', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='seq_num', full_name='chordService.Pair.seq_num', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addrs', full_name='chordService.Pair.addrs', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=362,
)


_NOTIFYRESPONSE = _descriptor.Descriptor(
  name='NotifyResponse',
  full_name='chordService.NotifyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='chordService.NotifyResponse.result', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pairs', full_name='chordService.NotifyResponse.pairs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=364,
  serialized_end=431,
)


_GETCONFIGURATIONREQUEST = _descriptor.Descriptor(
  name='GetConfigurationRequest',
  full_name='chordService.GetConfigurationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=433,
  serialized_end=458,
)


_GETCONFIGURATIONRESPONSE_ENTRY = _descriptor.Descriptor(
  name='Entry',
  full_name='chordService.GetConfigurationResponse.Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='chordService.GetConfigurationResponse.Entry.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='successor_id', full_name='chordService.GetConfigurationResponse.Entry.successor_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='addr', full_name='chordService.GetConfigurationResponse.Entry.addr', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=666,
)

_GETCONFIGURATIONRESPONSE = _descriptor.Descriptor(
  name='GetConfigurationResponse',
  full_name='chordService.GetConfigurationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='predecessorId', full_name='chordService.GetConfigurationResponse.predecessorId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='successorId', full_name='chordService.GetConfigurationResponse.successorId', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table', full_name='chordService.GetConfigurationResponse.table', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='storage', full_name='chordService.GetConfigurationResponse.storage', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETCONFIGURATIONRESPONSE_ENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=461,
  serialized_end=666,
)


_GETREQUEST = _descriptor.Descriptor(
  name='GetRequest',
  full_name='chordService.GetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='keys', full_name='chordService.GetRequest.keys', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=668,
  serialized_end=694,
)


_GETRESPONSE = _descriptor.Descriptor(
  name='GetResponse',
  full_name='chordService.GetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='chordService.GetResponse.result', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pairs', full_name='chordService.GetResponse.pairs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=696,
  serialized_end=760,
)


_PUTREQUEST = _descriptor.Descriptor(
  name='PutRequest',
  full_name='chordService.PutRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pairs', full_name='chordService.PutRequest.pairs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=762,
  serialized_end=809,
)


_PUTRESPONSE = _descriptor.Descriptor(
  name='PutResponse',
  full_name='chordService.PutResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='chordService.PutResponse.result', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=811,
  serialized_end=840,
)


_CHECKREQUEST = _descriptor.Descriptor(
  name='CheckRequest',
  full_name='chordService.CheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pairs', full_name='chordService.CheckRequest.pairs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=842,
  serialized_end=891,
)


_CHECKRESPONSE = _descriptor.Descriptor(
  name='CheckResponse',
  full_name='chordService.CheckResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='chordService.CheckResponse.result', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=893,
  serialized_end=924,
)

_NOTIFYRESPONSE.fields_by_name['pairs'].message_type = _PAIR
_GETCONFIGURATIONRESPONSE_ENTRY.containing_type = _GETCONFIGURATIONRESPONSE
_GETCONFIGURATIONRESPONSE.fields_by_name['table'].message_type = _GETCONFIGURATIONRESPONSE_ENTRY
_GETRESPONSE.fields_by_name['pairs'].message_type = _PAIR
_PUTREQUEST.fields_by_name['pairs'].message_type = _PAIR
_CHECKREQUEST.fields_by_name['pairs'].message_type = _PAIR
DESCRIPTOR.message_types_by_name['FindSuccessorRequest'] = _FINDSUCCESSORREQUEST
DESCRIPTOR.message_types_by_name['FindSuccessorResponse'] = _FINDSUCCESSORRESPONSE
DESCRIPTOR.message_types_by_name['GetPredecessorRequest'] = _GETPREDECESSORREQUEST
DESCRIPTOR.message_types_by_name['GetPredecessorResponse'] = _GETPREDECESSORRESPONSE
DESCRIPTOR.message_types_by_name['NotifyRequest'] = _NOTIFYREQUEST
DESCRIPTOR.message_types_by_name['Pair'] = _PAIR
DESCRIPTOR.message_types_by_name['NotifyResponse'] = _NOTIFYRESPONSE
DESCRIPTOR.message_types_by_name['GetConfigurationRequest'] = _GETCONFIGURATIONREQUEST
DESCRIPTOR.message_types_by_name['GetConfigurationResponse'] = _GETCONFIGURATIONRESPONSE
DESCRIPTOR.message_types_by_name['GetRequest'] = _GETREQUEST
DESCRIPTOR.message_types_by_name['GetResponse'] = _GETRESPONSE
DESCRIPTOR.message_types_by_name['PutRequest'] = _PUTREQUEST
DESCRIPTOR.message_types_by_name['PutResponse'] = _PUTRESPONSE
DESCRIPTOR.message_types_by_name['CheckRequest'] = _CHECKREQUEST
DESCRIPTOR.message_types_by_name['CheckResponse'] = _CHECKRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FindSuccessorRequest = _reflection.GeneratedProtocolMessageType('FindSuccessorRequest', (_message.Message,), dict(
  DESCRIPTOR = _FINDSUCCESSORREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.FindSuccessorRequest)
  ))
_sym_db.RegisterMessage(FindSuccessorRequest)

FindSuccessorResponse = _reflection.GeneratedProtocolMessageType('FindSuccessorResponse', (_message.Message,), dict(
  DESCRIPTOR = _FINDSUCCESSORRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.FindSuccessorResponse)
  ))
_sym_db.RegisterMessage(FindSuccessorResponse)

GetPredecessorRequest = _reflection.GeneratedProtocolMessageType('GetPredecessorRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETPREDECESSORREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetPredecessorRequest)
  ))
_sym_db.RegisterMessage(GetPredecessorRequest)

GetPredecessorResponse = _reflection.GeneratedProtocolMessageType('GetPredecessorResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETPREDECESSORRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetPredecessorResponse)
  ))
_sym_db.RegisterMessage(GetPredecessorResponse)

NotifyRequest = _reflection.GeneratedProtocolMessageType('NotifyRequest', (_message.Message,), dict(
  DESCRIPTOR = _NOTIFYREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.NotifyRequest)
  ))
_sym_db.RegisterMessage(NotifyRequest)

Pair = _reflection.GeneratedProtocolMessageType('Pair', (_message.Message,), dict(
  DESCRIPTOR = _PAIR,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.Pair)
  ))
_sym_db.RegisterMessage(Pair)

NotifyResponse = _reflection.GeneratedProtocolMessageType('NotifyResponse', (_message.Message,), dict(
  DESCRIPTOR = _NOTIFYRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.NotifyResponse)
  ))
_sym_db.RegisterMessage(NotifyResponse)

GetConfigurationRequest = _reflection.GeneratedProtocolMessageType('GetConfigurationRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCONFIGURATIONREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetConfigurationRequest)
  ))
_sym_db.RegisterMessage(GetConfigurationRequest)

GetConfigurationResponse = _reflection.GeneratedProtocolMessageType('GetConfigurationResponse', (_message.Message,), dict(

  Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), dict(
    DESCRIPTOR = _GETCONFIGURATIONRESPONSE_ENTRY,
    __module__ = 'chord_service_pb2'
    # @@protoc_insertion_point(class_scope:chordService.GetConfigurationResponse.Entry)
    ))
  ,
  DESCRIPTOR = _GETCONFIGURATIONRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetConfigurationResponse)
  ))
_sym_db.RegisterMessage(GetConfigurationResponse)
_sym_db.RegisterMessage(GetConfigurationResponse.Entry)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetRequest)
  ))
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.GetResponse)
  ))
_sym_db.RegisterMessage(GetResponse)

PutRequest = _reflection.GeneratedProtocolMessageType('PutRequest', (_message.Message,), dict(
  DESCRIPTOR = _PUTREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.PutRequest)
  ))
_sym_db.RegisterMessage(PutRequest)

PutResponse = _reflection.GeneratedProtocolMessageType('PutResponse', (_message.Message,), dict(
  DESCRIPTOR = _PUTRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.PutResponse)
  ))
_sym_db.RegisterMessage(PutResponse)

CheckRequest = _reflection.GeneratedProtocolMessageType('CheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKREQUEST,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.CheckRequest)
  ))
_sym_db.RegisterMessage(CheckRequest)

CheckResponse = _reflection.GeneratedProtocolMessageType('CheckResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHECKRESPONSE,
  __module__ = 'chord_service_pb2'
  # @@protoc_insertion_point(class_scope:chordService.CheckResponse)
  ))
_sym_db.RegisterMessage(CheckResponse)



_CHORD = _descriptor.ServiceDescriptor(
  name='Chord',
  full_name='chordService.Chord',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=927,
  serialized_end=1576,
  methods=[
  _descriptor.MethodDescriptor(
    name='find_successor',
    full_name='chordService.Chord.find_successor',
    index=0,
    containing_service=None,
    input_type=_FINDSUCCESSORREQUEST,
    output_type=_FINDSUCCESSORRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='get_predecessor',
    full_name='chordService.Chord.get_predecessor',
    index=1,
    containing_service=None,
    input_type=_GETPREDECESSORREQUEST,
    output_type=_GETPREDECESSORRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='get_configuration',
    full_name='chordService.Chord.get_configuration',
    index=2,
    containing_service=None,
    input_type=_GETCONFIGURATIONREQUEST,
    output_type=_GETCONFIGURATIONRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='notify_at_join',
    full_name='chordService.Chord.notify_at_join',
    index=3,
    containing_service=None,
    input_type=_NOTIFYREQUEST,
    output_type=_NOTIFYRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='notify_at_leave',
    full_name='chordService.Chord.notify_at_leave',
    index=4,
    containing_service=None,
    input_type=_NOTIFYREQUEST,
    output_type=_NOTIFYRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='get',
    full_name='chordService.Chord.get',
    index=5,
    containing_service=None,
    input_type=_GETREQUEST,
    output_type=_GETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='put',
    full_name='chordService.Chord.put',
    index=6,
    containing_service=None,
    input_type=_PUTREQUEST,
    output_type=_PUTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='check',
    full_name='chordService.Chord.check',
    index=7,
    containing_service=None,
    input_type=_CHECKREQUEST,
    output_type=_CHECKRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CHORD)

DESCRIPTOR.services_by_name['Chord'] = _CHORD

# @@protoc_insertion_point(module_scope)
